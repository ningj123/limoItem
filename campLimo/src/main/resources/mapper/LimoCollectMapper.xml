<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniuxy.mapper.LimoCollectMapper">
  <resultMap id="BaseResultMap" type="com.woniuxy.domain.LimoCollect">
    <id column="co_id" jdbcType="INTEGER" property="coId" />
    <result column="p_id" jdbcType="INTEGER" property="pId" />
    <result column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="a_id" jdbcType="INTEGER" property="aId" />
    <result column="co_type" jdbcType="INTEGER" property="coType" />
    <result column="co_time" jdbcType="TIMESTAMP" property="coTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    co_id, p_id, u_id, c_id, a_id, co_type, co_time
  </sql>
  <select id="selectByExample" parameterType="com.woniuxy.domain.LimoCollectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from limo_collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from limo_collect
    where co_id = #{coId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from limo_collect
    where co_id = #{coId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniuxy.domain.LimoCollectExample">
    delete from limo_collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="co_id" keyProperty="coId" parameterType="com.woniuxy.domain.LimoCollect" useGeneratedKeys="true">
    insert into limo_collect (p_id, u_id, c_id, 
      a_id, co_type, co_time
      )
    values (#{pId,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{cId,jdbcType=INTEGER}, 
      #{aId,jdbcType=INTEGER}, #{coType,jdbcType=INTEGER}, #{coTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="co_id" keyProperty="coId" parameterType="com.woniuxy.domain.LimoCollect" useGeneratedKeys="true">
    insert into limo_collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pId != null">
        p_id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="aId != null">
        a_id,
      </if>
      <if test="coType != null">
        co_type,
      </if>
      <if test="coTime != null">
        co_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pId != null">
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="aId != null">
        #{aId,jdbcType=INTEGER},
      </if>
      <if test="coType != null">
        #{coType,jdbcType=INTEGER},
      </if>
      <if test="coTime != null">
        #{coTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniuxy.domain.LimoCollectExample" resultType="java.lang.Long">
    select count(*) from limo_collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update limo_collect
    <set>
      <if test="record.coId != null">
        co_id = #{record.coId,jdbcType=INTEGER},
      </if>
      <if test="record.pId != null">
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.aId != null">
        a_id = #{record.aId,jdbcType=INTEGER},
      </if>
      <if test="record.coType != null">
        co_type = #{record.coType,jdbcType=INTEGER},
      </if>
      <if test="record.coTime != null">
        co_time = #{record.coTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update limo_collect
    set co_id = #{record.coId,jdbcType=INTEGER},
      p_id = #{record.pId,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      a_id = #{record.aId,jdbcType=INTEGER},
      co_type = #{record.coType,jdbcType=INTEGER},
      co_time = #{record.coTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniuxy.domain.LimoCollect">
    update limo_collect
    <set>
      <if test="pId != null">
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="aId != null">
        a_id = #{aId,jdbcType=INTEGER},
      </if>
      <if test="coType != null">
        co_type = #{coType,jdbcType=INTEGER},
      </if>
      <if test="coTime != null">
        co_time = #{coTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where co_id = #{coId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniuxy.domain.LimoCollect">
    update limo_collect
    set p_id = #{pId,jdbcType=INTEGER},
      u_id = #{uId,jdbcType=INTEGER},
      c_id = #{cId,jdbcType=INTEGER},
      a_id = #{aId,jdbcType=INTEGER},
      co_type = #{coType,jdbcType=INTEGER},
      co_time = #{coTime,jdbcType=TIMESTAMP}
    where co_id = #{coId,jdbcType=INTEGER}
  </update>
</mapper>